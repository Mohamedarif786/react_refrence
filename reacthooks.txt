
1. useState hook 

import React, { useState } from "react";

const Counter = () => {
    const [count, setCount] = useState(0)

    return (
        <div>
        <button onClick={() => setCount(count+1)}>Count increase</button>
        <button onClick={() => setCount(count-1)}>Count crease</button>
        <p>Current value of count is {count}</p>
        </div>
    );
};

export default Counter;


2.useState with previews state

import React, { useState } from "react";

const Counter = () => {
    const [count, setCount] = useState(0)

    const increaseFive = () =>{
        for(let i =0; i<5; i++){
            setCount( prev =>  prev+1);
        }
    }
    return (
        <div>
        <button onClick={ () => increaseFive()}>Click me to add 5</button>
        <p>Current value of count is {count}</p>
        </div>
    );
};

export default Counter;

3.useState objects previews value merge


import React, { useState } from "react";

const Counter = () => {
    const [person,setPerson] =useState ({firstName:'',lastName:''});
    
    return (
        <div>
        <input type="text" onChange={(e)=> setPerson({...person,firstName: e.target.value})} placeholder="Enter your first name" />
        <input type="text" onChange={(e)=> setPerson({...person,lastName: e.target.value})} placeholder="Enter your last name" />
        {/* {JSON.stringify(person)} */}
        <p>first name value is {person.firstName}</p>
        <p>last name value is {person.lastName}</p>
        </div>
    );
};

export default Counter;


4. use effect hooks
 
 
 
 import React, { useState, useEffect } from "react";

const Counter = () => {
  const [count, setCount] = useState(0);

  const [msge, setMege] = useState("initial message");

  useEffect(() => {
    console.log("component mounted /updated");
    console.log(msge);
    console.log("count is incresed to ", count);
  },[msge,count]);
  return (
    <div>
      <button
        onClick={() => {
          setCount(count + 1);
        }}
      >
        increase count
      </button>
      <p>The count value is: {count}</p>
      <button
        onClick={() => {
          setMege("msg updated on click event");
        }}
      >
        updated message
      </button>
      <p>{msge}</p>
    </div>
  );
};

export default Counter;



5. useEffect  cleanup example 

  1. Clean up component 
  
	  import React,{useState} from "react";
	  import CompA from "./CompA";

	const Cleanup = () =>{
		const [toggle, setToggle] = useState(true);
		return(
			<div>
				<p>useEffect with cleanup</p>
				<button onClick={()=>{ setToggle(!toggle) }}>show/hide CompA</button>
				{ toggle? <CompA />:null}
			</div>
		)
	}

	export default  Cleanup;
	
	
  2. ComponentA 
  
	import React,{useEffect} from "react";

	const CompA = () =>{
		
		useEffect( ()=>{

			console.log('Effect goes here');
			const timerid = setInterval(() => {
				console.log('API Call executed');
			}, 2000);
			
			return () =>{
				console.log('Cleanup goes here');
				 clearInterval(timerid);
			}
		},[]);
		return (
			<div>
				<p>Component A</p>
				<hr/>
			</div>
		)
	}

	export default CompA;
	
	
  3.
	import "./App.css";
	import Cleanup from "./use_effect_cleanup/Cleanup";

	function App() {
	  return (
		<div className="App">
		  <Cleanup/>
		</div>
	  );
	}

	export default App;


 
6. useEffect  cleanup  another example  


import React, {useState ,useEffect} from "react";


	1. ComponentB  
	const CompB = () =>{
		const [count ,setCount] =useState(0);

		useEffect( () =>{
			console.log("effect goes here");
			let timerid ;
			if(count){
				timerid = setInterval(() => {
					console.log("get price ");
				}, 2000);
			}
			return() =>{
				console.log('Clean up goes here');
				clearInterval(timerid);
			}
		},[count])
		return (
			<div>
				<p>Component B</p>
				<button onClick={ () => { setCount(count +1 ) }} >Count is {count}</button>
			</div>
		)
	}

	export default CompB;
	
	
	2.
	
	import React,{useState} from "react";
	import CompB from "./CompB";

	const Cleanup = () =>{
		const [toggle, setToggle] = useState(true);
		return(
			<div>
				<p>useEffect with cleanup</p>
				<CompB/>
			</div>
		)
	}

	export default  Cleanup;
	
	3. 
	
	import "./App.css";
	import Counter from "./use_effect/Counter";
	import Cleanup from "./use_effect_cleanup/Cleanup";

	function App() {
	  const value = 0;
	  const color = "red";
	  return (
		<div className="App">
		  <Cleanup/>
		</div>
	  );
	}

	export default App;


	7. useRef example 

	import React ,{useRef,useEffect} from "react";


	const StyleElement = () =>{
	    const colorParagraph =useRef(null);
	    const color = [ "black","red","blue","gray","green","yellow"];

	    useEffect( ()=>{
	        console.log(colorParagraph);
	        console.log(colorParagraph.current);
	    });

	    
	    const stylePragraph = () =>{
	        const randomColor = Math.floor(Math.random() * color.length);
	        colorParagraph.current.style.color = color[randomColor];
	    }
	    return (
	        <div>
	            <button onClick={() => stylePragraph()} >Click me</button>
	            <p ref={colorParagraph}>Welcome back to the channel</p>
	        </div>
	    )
	}

	export default StyleElement;